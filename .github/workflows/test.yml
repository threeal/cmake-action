name: test
on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [latest, main]
jobs:
  default-usage:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [windows, ubuntu, macos]
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3.5.3

      - name: Move the test project to the working directory
        run: mv test/* .

      - name: Use the action
        uses: ./

      - name: Try to test the project
        id: failed-step
        continue-on-error: true
        run: ctest --test-dir build --output-on-failure --no-tests=error

      - name: Check on success
        if: steps.failed-step.outcome == 'success'
        run: exit 1

      - name: Build and test the project
        run: |
          cmake --build build
          ctest --test-dir build --output-on-failure --no-tests=error

  specified-dir-usage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3.5.3

      - name: Use the action with specified directories
        uses: ./
        with:
          source-dir: test
          build-dir: output

      - name: Check if the default build directory does not exist
        shell: bash
        run: test ! -e build && test ! -e test/build

      - name: Build and test the project
        run: |
          cmake --build output
          ctest --test-dir output --output-on-failure --no-tests=error

  run-build-usage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3.5.3

      - name: Use the action with run build enabled
        uses: ./
        with:
          source-dir: test
          run-build: true

      - name: Test the project
        run: ctest --test-dir build --output-on-failure --no-tests=error

  run-test-usage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3.5.3

      - name: Use the action with run test enabled
        uses: ./
        with:
          source-dir: test
          run-build: true
          run-test: true

  additional-flags-usage:
    runs-on: ${{ matrix.compiler == 'msvc' && 'windows' || 'ubuntu' }}-latest
    strategy:
      matrix:
        compiler: [gcc, msvc]
    steps:
      - name: Check out this repository
        uses: actions/checkout@v3.5.3

      - name: Use this action with additional compiler flags
        uses: ./
        with:
          source-dir: test
          c-flags: ${{ matrix.compiler == 'msvc' && '/w /WX-' || '-Wno-unused-variable' }}
          cxx-flags: ${{ matrix.compiler == 'msvc' && '/w /WX-' || '-Wno-unused-variable' }}
          args: -D CHECK_SURPASS_WARNING=ON
          run-build: true
          build-args: --target test_c --target test_cpp
          run-test: true
          test-args: -R test ${{ matrix.compiler == 'msvc' && '-C Debug' || '' }}

  specified-compiler-usage:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [windows, ubuntu, macos]
    steps:
      - name: Check out this repository
        uses: actions/checkout@v3.5.3

      - name: Use this action with specified compilers
        uses: ./
        with:
          source-dir: test
          generator: Ninja
          c-compiler: clang
          cxx-compiler: clang++
          args: -D CHECK_USING_CLANG=ON
          run-build: true
          build-args: --target test_c --target test_cpp
          run-test: true
          test-args: -R test

  specified-generator-usage:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [windows, ubuntu, macos]
    steps:
      - name: Check out this repository
        uses: actions/checkout@v3.5.3

      - name: Use this action with a specified generator
        uses: ./
        with:
          source-dir: test
          generator: Ninja
          run-build: true
          run-test: true
          test-args: -R hello_world
