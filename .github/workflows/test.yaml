name: Test
on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main]
jobs:
  check-package:
    name: Check Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.2

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: latest

      - name: Setup Yarn
        uses: threeal/setup-yarn-action@v2.0.0
        with:
          version: stable

      - name: Check Format
        run: |
          yarn format
          git diff --exit-code HEAD

      - name: Check Lint
        run: yarn lint

  test-package:
    name: Test Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.2

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: latest

      - name: Setup Yarn
        uses: threeal/setup-yarn-action@v2.0.0
        with:
          version: stable

      - name: Test Package
        run: yarn test

  test-action:
    name: Test Action
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [windows, ubuntu, macos]
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.2
        with:
          sparse-checkout: |
            action.yml
            dist
            test
          sparse-checkout-cone-mode: false

      - name: Move Project
        run: mv test/* .

      - name: Configure and Build Project
        id: cmake-action
        uses: ./

      - name: Test Project
        uses: threeal/ctest-action@v1.0.0
        with:
          build-config: Debug
          tests-regex: hello_world

  test-action-with-specified-dirs:
    name: Test Action With Specified Directories
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.2
        with:
          sparse-checkout: |
            action.yml
            dist
            test
          sparse-checkout-cone-mode: false

      - name: Configure and Build Project
        id: cmake-action
        uses: ./
        with:
          source-dir: test
          build-dir: output

      - name: Default Build Directory Should Not Exist
        shell: bash
        run: test ! -e build && test ! -e test/build

      - name: Test Project
        uses: threeal/ctest-action@v1.0.0
        with:
          test-dir: ${{ steps.cmake-action.outputs.build-dir }}
          tests-regex: hello_world

  test-action-without-run-build:
    name: Test Action Without Run Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.2
        with:
          sparse-checkout: |
            action.yml
            dist
            test
          sparse-checkout-cone-mode: false

      - name: Configure Project
        id: cmake-action
        uses: ./
        with:
          source-dir: test
          run-build: false

      - name: Try to Test Project
        id: failed-step
        continue-on-error: true
        uses: threeal/ctest-action@v1.0.0
        with:
          tests-regex: hello_world

      - name: Previous Step Should Failed
        if: steps.failed-step.outcome == 'success'
        run: exit 1

  test-action-with-additional-args:
    name: Test Action With Additional Arguments
    runs-on: ${{ matrix.compiler == 'msvc' && 'windows' || 'ubuntu' }}-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc, msvc]
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.2
        with:
          sparse-checkout: |
            action.yml
            dist
            test
          sparse-checkout-cone-mode: false

      - name: Configure, Build, and Test Project
        uses: ./
        with:
          source-dir: test
          c-flags: ${{ matrix.compiler == 'msvc' && '/w /WX-' || '-Wno-unused-variable' }}
          cxx-flags: ${{ matrix.compiler == 'msvc' && '/w /WX-' || '-Wno-unused-variable' }}
          options: CHECK_SURPASS_WARNING=ON
          build-args: --target test_c --target test_cpp

  test-action-with-custom-tools:
    name: Test Action With Custom Tools
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [windows, ubuntu, macos]
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.2
        with:
          sparse-checkout: |
            action.yml
            dist
            test
          sparse-checkout-cone-mode: false

      - name: Setup Ninja
        uses: seanmiddleditch/gha-setup-ninja@v4

      - name: Configure, Build, and Test Project
        uses: ./
        with:
          source-dir: test
          generator: Ninja
          c-compiler: clang
          cxx-compiler: clang++
          options: CHECK_USING_CLANG=ON
          build-args: --target test_c --target test_cpp
